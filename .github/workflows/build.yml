name: CML language server build
on:
  push:
    branches:
      - '**'
  release:
    types: [published]

permissions:
  contents: read
  actions: read
  checks: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: node:22-slim
    steps:
      - name: Prepare debian
        run: |
          apt update
          apt install -y git wget
      # required since test report action uses git
      - name: Setup git
        run: |
          REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f2)
          git config --global --add safe.directory "/__w/$REPO_NAME/$REPO_NAME"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Langium resources
        run: yarn langium:generate:production

      - name: Linting
        run: yarn lint

      - name: Langium Tests
        run: yarn test

      - name: Langium Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Langium Test Results
          path: out/test-results.xml
          reporter: java-junit

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build
        run: yarn build

      - name: Bundle
        run: yarn bundle:language-server

      - name: Upload language server artifact
        uses: actions/upload-artifact@v4
        with:
          name: cml-language-server
          path: ./cml-ls/

      - name: Prepare publication
        if: github.event_name == 'release'  # Publish only on release creation
        run: sed -i -e 's/<TOKEN>/${{ secrets.GITHUB_TOKEN }}/g' .yarnrc.yml

      - name: Publish to GitHub Package Registry
        if: github.event_name == 'release'  # Publish only on release creation
        run: yarn npm publish --access public
