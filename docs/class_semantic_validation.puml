@startuml
abstract class ValidationRegistry {
+ register(checks: ValidationChecks<T>, validator: ThisParameterType)
}

class ContextMapperDslValidationRegistry {
}

class ContextMapperDslValidator {
+ validate(node: AstNode, acceptor: ValidationAcceptor)
}

class ContextMapperValidationProviderRegistry {
- _providers: Map<string, ContextMapperValidationProvider<AstNode>>
+ get(node: AstNode): ContextMapperValidationProvider<AstNode> | undefined
}

interface ContextMapperValidationProvider {
+ validate(node: T, acceptor: ValidationAcceptor)
}

ValidationRegistry <|-- ContextMapperDslValidationRegistry
ContextMapperDslValidationRegistry --> ContextMapperDslValidator
ContextMapperDslValidationRegistry --> ContextMapperValidationProviderRegistry
ContextMapperDslValidator --> ContextMapperValidationProviderRegistry
ContextMapperValidationProviderRegistry o-- "0..*" ContextMapperValidationProvider
@enduml